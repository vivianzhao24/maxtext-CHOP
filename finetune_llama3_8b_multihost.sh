#!/bin/bash

# This file is both an integration test that runs once a day on a v4-16 and documentation for how to get started with Llama3-8b. 
# Please make sure you have run end_to_end/tpu/llama3/8b/1_test_llama3_8b.sh before running commands from this file. 

# The flow of this file is as follows:
# 1. Run decoding, finetuning of Llama3-8B with the converted checkpoint obtained from end_to_end/tpu/llama3/8b/1_test_llama3_8b.sh. Also, run pretraining of Llama3-8B
# 2. Run more efficient decoding with the unscanned checkpoint obtained from end_to_end/tpu/llama3/8b/1_test_llama3_8b.sh
# 3. Run decoding from the finetuned checkpoint from step 1


# Example Usage: export BASE_OUTPUT_PATH=/path/to/GCS/bucket; bash end_to_end/tpu/llama3/8b/2_test_llama3_8b.sh
# Use the same BASE_OUTPUT_PATH as end_to_end/tpu/llama3/8b/1_test_llama3_8b.sh
# Please note that in these two scripts (1_test_llama3_8b.sh and 2_test_llama3_8b.sh) BASE_OUTPUT_PATH is assumed to be already a unique path across multiple runs and 
# the subfolders names aka RUN_NAMEs are static. Please remember to change BASE_OUTPUT_PATH across different runs.

set -ex
export MODEL_VARIATION='llama3-8b'

if [ -z "${BASE_OUTPUT_PATH}" ]; then
    # Non-Googlers please remember to point `BASE_OUTPUT_PATH` to a GCS bucket that you own, this bucket will store all the files generated by MaxText during a run
    # Use the same BASE_OUTPUT_PATH as end_to_end/tpu/llama3/8b/1_test_llama3_8b.sh
    export BASE_OUTPUT_PATH=${GSSOUTH}
    echo "BASE_OUTPUT_PATH is not set, using BASE_OUTPUT_PATH = ${BASE_OUTPUT_PATH}"
fi

# Non-Googlers please remember to point `DATASET_PATH` to the GCS bucket where you have your training data
export DATASET_PATH=${GSSOUTH}

# We define `CONVERTED_CHECKPOINT` to refer to the checkpoint subdirectory. This way it is easier to use this path in the `train.py` and `decode.py` commands
export CONVERTED_CHECKPOINT=${BASE_OUTPUT_PATH}/${MODEL_VARIATION}/scanned_chkpt/0/items

setup(){
    python3 multihost_runner.py --TPU_PREFIX=$TPU_NAME --COMMAND="export PATH='/home/sa_112413943341569390945/.local/bin:$PATH';bash arcus-maxtext.sh; bash setup.sh"
}

finetune(){
    # check for run name passed to function 
    if [["$#" -neq 1 ]]; then 
        echo "Must pass exactly one run name to function finetune" 
        return 1
    fi 
    export FINETUNE_RUN_NAME="$1"
    # Use escaped inner " and $ in to prevent expansion in local shell as opposed to expansion on host shell if not using inner single quotes. 
    python3 multihost_runner.py --TPU_PREFIX=$TPU_NAME --COMMAND="export PATH='/home/sa_112413943341569390945/.local/bin:$PATH'; python MaxText/train.py MaxText/configs/base.yml base_output_directory=${BASE_OUTPUT_PATH} dataset_path=${DATASET_PATH} tokenizer_path=assets/tokenizer_llama3.tiktoken load_parameters_path=${CONVERTED_CHECKPOINT} per_device_batch_size=1 run_name=${FINETUNE_RUN_NAME} steps=10 async_checkpointing=false model_name=${MODEL_VARIATION} checkpoint_period=5 2>&1 | tee pre-train_logs_multihost.txt"
}